import { importLanguage } from "schema-node";

importLanguage("enUS", {
    "schema.nav.introduce": "Introduction",
    "schema.nav.tryit": "Try It",
    "schema.nav.type": "Type Management",
    "schema.nav.app": "App Management",
    "schema.server.url": "Schema Services Url",

    "schema": "Schema Definition Helper",
    "schema.namespace": "Namespace",
    "schema.scalartype": "Scalar Type",
    "schema.enumtype": "Enum Types",
    "schema.structtype": "Struct Type",
    "schema.arraytype": "Array Types",
    "schema.functype": "Function Type",
    "schema.pushfunctype": "Push Function Type",
    "schema.scalarwhitelistfunc": "Scalar WhiteList Function",
    "schema.scalarvalidfunc": "Scalar Valid Function Type",
    "schema.scalarenumtype": "Scalar or Enum Type",
    "schema.arrayeletype": "Non-array Data Type",
    "schema.valuetype": "Any Data Type",
    "schema.varname": "Field Name",
    "schema.namespaceinput": "Namespace Input",
    "schema.reltarfield": "Related Target Field",
    "schema.anyvalue": "Any Value",
    "schema.color": "Color",

    "schema.reltarfield.ele": "Array Element",

    "schema.schematype": "Data Type",
    "schema.schematype.namespace": "Namespace",
    "schema.schematype.enum": "Enum",
    "schema.schematype.scalar": "Scalar",
    "schema.schematype.struct": "Struct",
    "schema.schematype.array": "Array",
    "schema.schematype.func": "Function",

    "schema.relationtype": "Relation Purpose",
    "schema.relationtype.default": "Default Value",
    "schema.relationtype.root": "Root Value",
    "schema.relationtype.blacklist": "Enum Blacklist",
    "schema.relationtype.whitelist": "Enum Whitelist",
    "schema.relationtype.lowlimit": "Lower Limit",
    "schema.relationtype.uplimit": "Upper Limit",
    "schema.relationtype.invisible": "Invisible",
    "schema.relationtype.visible": "Visible",
    "schema.relationtype.disable": "Disabled",
    "schema.relationtype.assign": "Force Assign",
    "schema.relationtype.initonly": "Init Only",
    "schema.relationtype.type": "Switch Type",
    "schema.relationtype.anylevel": "Enum Any Level",
    "schema.relationtype.cascade": "Cascade Limit",    
    "schema.relationtype.singleflag": "Single Flag Value",
    "schema.relationtype.validation": "Union validation",

    "schema.exptype": "Function Expression Mode",
    "schema.exptype.call": "Direct Call",
    "schema.exptype.map": "Map Array",
    "schema.exptype.reduce": "Reduce Array",
    "schema.exptype.first": "First Match",
    "schema.exptype.last": "Last Match",
    "schema.exptype.filter": "Filter",
    "schema.exptypes": "Exp Call Mode list",

    "schema.enumvaluetype": "Enum Value Type",
    "schema.enumvaluetype.string": "String",
    "schema.enumvaluetype.int": "Integer",
    "schema.enumvaluetype.flags": "Flags",

    "schema.datacombinetype": "Data Combine Method",
    "schema.datacombinetype.assign": "Assign, use last value",
    "schema.datacombinetype.init": "Init, use first value",
    "schema.datacombinetype.sum": "Sum",
    "schema.datacombinetype.count": "Count",

    "schema.language": "Language",
    "schema.localetran": "Translate",
    "schema.localetran.lang": "Language",
    "schema.localetran.tran": "Translate",
    "schema.localetrans": "Translate List",

    "schema.localestring": "Locale string",
    "schema.localestring.default": "Default",
    "schema.localestring.trans": "Translate",
    "schema.localestrings": "Locale strings",
    
    "schema.scalardefine": "Scalar Definition",
    "schema.scalardefine.base": "Base Scalar Type",
    "schema.scalardefine.unit": "Unit Literal",
    "schema.scalardefine.lowlimit": "Min Value",
    "schema.scalardefine.uplimit": "Max Value",
    "schema.scalardefine.error": "Error Message",
    "schema.scalardefine.regex": "Regex Pattern",
    "schema.scalardefine.whitelist": "WhiteList",
    "schema.scalardefine.valid": "Eval Validation Expression",
    "schema.scalardefine.conv": "Eval Convert Expression",

    "schema.enumvalueinfo": "Enum Value Info",
    "schema.enumvalueinfo.value": "Value",
    "schema.enumvalueinfo.name": "Name",
    "schema.enumvalueinfo.disable": "Disabled",
    "schema.enumvalueinfo.sublist": "SubList",
    "schema.enumvalueinfo.hassublist": "Has Sublist",
    "schema.enumvalueinfos": "Enum Value Info List",
    "schema.calcnextflag": "Calculate Next Flag",
    "schema.getenuminfostype": "Get Enum Info Type",
    "schema.getenumrootcascade": "Gets the cascade level for enum root",
    "schema.getroottype": "Gets the type for root",
    "schema.noenumroot": "Not enum root",

    "schema.enumdefine": "Enum Definition",
    "schema.enumdefine.type": "Enum Value Type",
    "schema.enumdefine.cascade": "Cascade Name",
    "schema.enumdefine.color": "Enable Color",
    "schema.enumdefine.values": "Enum Values",
    "schema.enumdefine.downlevel": "Next",
    "schema.enumdefine.moveup": "Move up",

    "schema.structindex": "Struct Index",
    "schema.structindex.fields": "Fields",
    "schema.structindex.unique": "Unique Index",
    "schema.structindexs": "Struct Index List",

    "schema.structfldfuncarg": "Struct Field Func Arg",
    "schema.structfldfuncarg.type": "Arg Type",
    "schema.structfldfuncarg.name": "Field Name",
    "schema.structfldfuncarg.value": "Value",
    "schema.structfldfuncargs": "Struct Field Func Args",

    "schema.structfieldtype": "Struct Field Type",
    "schema.structfieldtype.name": "Field Name",
    "schema.structfieldtype.type": "Field Type",
    "schema.structfieldtype.display": "Display Name",
    "schema.structfieldtype.error": "Error Message",
    "schema.structfieldtype.desc": "Description",
    "schema.structfieldtype.require": "Required",
    "schema.structfieldtype.immutable": "Immutable",
    "schema.structfieldtype.readonly": "Read-only",
    "schema.structfieldtype.invisible": "Invisible",
    "schema.structfieldtype.displayonly": "Display Only",
    "schema.structfieldtype.unit": "Unit",
    "schema.structfieldtype.default": "Default Value",
    "schema.structfieldtype.whitelist": "Whitelist",
    "schema.structfieldtype.blacklist": "Blacklist",
    "schema.structfieldtype.lowlimit": "Lower Limit",
    "schema.structfieldtype.uplimit": "Upper Limit",
    "schema.structfieldtype.assuggest": "As Suggestion",
    "schema.structfieldtype.useoriginforuplimit": "Use Original for Upper Limit",
    "schema.structfieldtype.cascade": "Cascade Enum Depth",
    "schema.structfieldtype.root": "Enum Root Value",
    "schema.structfieldtype.anylevel": "Any Level Selectable",
    "schema.structfieldtype.singleflag": "Single Flag",
    "schema.structfieldtypes": "Struct Field Type List",

    "schema.structfldrelationinfo": "Field Relation",
    "schema.structfldrelationinfo.field": "Target Field",
    "schema.structfldrelationinfo.fieldtype": "Field Type",
    "schema.structfldrelationinfo.return": "Function Return",
    "schema.structfldrelationinfo.type": "Relation Type",
    "schema.structfldrelationinfo.func": "Relation Function",
    "schema.structfldrelationinfo.args": "Function Arguments",
    "schema.structfldrelationinfos": "Field Relation List",
    "schema.getrelationfuncreturn": "Get Relation Return Type",
    "schema.getstructindexfields": "Get Indexable Struct Fields",
    "schema.getrelationwhitelist": "Get Available Relation Types",
    "schema.getstructfieldtype": "Get Struct Field Type",
    "schema.getstructfieldtypebytype": "Get Struct Field Type by Type",
    "schema.getstructnumbervaluefields": "Get Struct Value Fields",

    "schema.notscalartype": "Non-Scalar Type",
    "schema.notenumtype": "Non-Enum Type",
    "schema.notscalarenumtype": "Non-Scalar or Enum Type",
    "schema.notcascadeenumtype": "Non-Cascade Enum Type",
    "schema.notflagsenumtype": "Non-Flags Enum Type",
    "schema.notstructtype": "Non-Struct Type",
    "schema.notstructarraytype": "Non-Struct or Struct-Array Type",
    "schema.getenumcascadewhitelist": "Get Cascade Name Whitelist",
    "schema.getwhiteblacklisttype": "Get white/black list type",

    "schema.structdefine": "Struct Definition",
    "schema.structdefine.base": "Base Type",
    "schema.structdefine.fields": "Fields",
    "schema.structdefine.relations": "Field Relations",
    "schema.structdefine.confirmflddel": "Do you want delte the {0} field",    
    "schema.structdefine.confirmrldel": "Do you want delete the relation",
    "schema.structdefine.anonymous": "given",
    "schema.structdefine.unkown": "Unkown",

    "schema.datacombine": "Data Combine Rule",
    "schema.datacombine.field": "Field",
    "schema.datacombine.type": "Combine Rule",
    "schema.datacombines": "Data Combine Rule List",

    "schema.dataindex": "Array Index",
    "schema.dataindex.name": "Index Name",
    "schema.dataindex.fields": "Index Field",
    "schema.dataindexes": "Array Indexes",

    "schema.arraydefine": "Array Definition",
    "schema.arraydefine.element": "Element Type",
    "schema.arraydefine.single": "As Single Value",
    "schema.arraydefine.primary": "Primary Key Fields",
    "schema.arraydefine.combine": "Data Combine Rule",
    "schema.arraydefine.relations": "Field Relationships",

    "schema.funcarg": "Function Argument",
    "schema.funcarg.name": "Name",
    "schema.funcarg.type": "Type",
    "schema.funcarg.nullable": "Nullable",
    "schema.funcargs": "Function Argument List",

    "schema.funccallarg": "Function Call Argument",
    "schema.funccallarg.name": "Expression",
    "schema.funccallarg.value": "Literal",
    "schema.funccallarg.display": "Argument",
    "schema.funccallargs": "Function Call Argument List",

    "schema.funcexp": "Function Expression Config",
    "schema.funcexp.name": "Expression Name",
    "schema.funcexp.type": "Call Type",
    "schema.funcexp.func": "Function",
    "schema.funcexp.return": "Return Type",
    "schema.funcexp.args": "Arguments",
    "schema.funcexps": "Function Expression List",

    "schema.funcdefine": "Function Definition",
    "schema.funcdefine.return": "Return Type",
    "schema.funcdefine.args": "Function Arguments",
    "schema.funcdefine.exps": "Function Expression List",
    "schema.funcdefine.generic": "Generic",
    "schema.funcdefine.server": "Only Server Call",
    "schema.funcdefine.nocache": "No Cache",
    "schema.getcalltypewhitelist": "Gets the exp call types",
    "schema.getfuncroot": "Gets the function return type by call type",
    "schema.getexpvaluetype": "Gets the type for exp value",
    "schema.isvaluenotnull": "Check is value not value",
    "schema.hideexpvalue": "Hide the exp value",

    "schema.namespacedefine": "Namespace Definition",
    "schema.namespacedefine.name": "Name",
    "schema.namespacedefine.type": "Type",
    "schema.namespacedefine.display": "Description",
    "schema.namespacedefine.scalar": "Scalar Definitions",
    "schema.namespacedefine.enum": "Enum Definitions",
    "schema.namespacedefine.struct": "Struct Definitions",
    "schema.namespacedefine.array": "Array Definitions",
    "schema.namespacedefine.func": "Function Definitions",

    "schema.designer.keyword": "Keyword",
    "schema.designer.reset": "Reset",
    "schema.designer.name": "Name",
    "schema.designer.desc": "Description",
    "schema.designer.type": "Type",
    "schema.designer.oper": "Action",
    "schema.designer.return": "Return",
    "schema.designer.edit": "Edit",
    "schema.designer.delete": "Delete",
    "schema.designer.down": "Child",
    "schema.designer.upnamespace": "Parent Namespace",
    "schema.designer.view": "View",
    "schema.designer.new": "New",
    "schema.designer.cantdelschema": "Cannot delete type in use",
    "schema.designer.cantdelapp": "Cannot delete specified app",
    "schema.designer.tryit": "Demo",
    "schema.designer.close": "Close",
    "schema.designer.save": "Save",
    "schema.designer.cancel": "Cancel",
    "schema.designer.clearcustomschemas": "Clear Cached Types",
    "schema.designer.download": "Download",
    "schema.designer.confirm": "Confirm",
    "schema.designer.upload": "Upload",
    "schema.designer.error": "Submit failed. Please check your data.",
    "schema.designer.showdata": "Show Data",
    "schema.designer.showform": "Show Form",
    "schema.designer.tag": "Tag",
    "schema.designer.returnstruct": "Return Struct",
    "schema.designer.validate": "Validate",
    "schema.designer.schema": "Type View",
    "schema.designer.clicktotry": "Click To Try",
    "schema.designer.display": "Display",
    "schema.designer.fields": "Fields",
    "schema.designer.clearcustomapps": "Clear Cached Apps",
    "schema.designer.upapp": "Up App",
    "schema.designer.moveup": "Move Up",
    "schema.designer.confirmdelete": "Continue the delete process?",
    "schema.designer.app": "Application",
    "schema.designer.tran": "Translate",
    "schema.designer.target": "App Target",
    "schema.designer.genguid": "Generate GUID",
    "schema.designer.loaddata": "Load Data",
    "schema.designer.savedata": "Save Data",
    "schema.designer.savefailed": "Save Data Failed",
    "schema.designer.inputfield": "Input Field",
    "schema.designer.reffield": "Ref Field",
    "schema.designer.outputfield": "Output Field",
    "schema.designer.viewref": "View Ref",

    "schema.catalog": "Catalog",
    "schema.catalog.01.intro": "01. Intro",
    "schema.catalog.02.namespace": "02. Namespace",
    "schema.catalog.03.scalar": "03. Scalar Value",
    "schema.catalog.04.enum": "04. Enum",
    "schema.catalog.05.struct": "05. Struct",
    "schema.catalog.06.array": "06. Array",
    "schema.catalog.07.function": "07. Function",
    "schema.catalog.08.usage": "08. Usage",
    "schema.catalog.09.view": "09. Custom View",
    "schema.catalog.10.app": "10. Application",
    "schema.catalog.10.app.field": "1. Field",
    "schema.catalog.10.app.push": "2. Push",
    "schema.catalog.10.app.ref": "3. Ref",
    "schema.catalog.10.app.main": "4. Main App",

    "schema.app": "App definition namespace",
    "schema.app.srcapp": "App",
    "schema.app.srcfld": "App Field",
    "schema.app.accessfld": "Access Field",
    "schema.app.appinput": "App(Input)",
    "schema.app.pushfld": "Push Field",
    "schema.app.pushflds": "Push Field List",
    "schema.app.fieldvalarg": "Parameter",
    "schema.app.fieldvalarg.name": "App field name",
    "schema.app.fieldvalarg.value": "Constant",
    "schema.app.fieldvalargs": "Parameter list",
    "schema.app.fieldrelation": "App field association",
    "schema.app.fieldrelation.field": "App Field",
    "schema.app.fieldrelation.type": "Association type",
    "schema.app.fieldrelation.func": "Association function",
    "schema.app.fieldrelation.args": "Association parameters",
    "schema.app.fieldrelations": "App field association list",
    "schema.app.field": "App field",
    "schema.app.field.name": "Field name",
    "schema.app.field.type": "Field type",
    "schema.app.field.display": "Field display",
    "schema.app.field.desc": "Field description",
    "schema.app.field.sourceapp": "Reference App",
    "schema.app.field.sourcefld": "Reference field",
    "schema.app.field.func": "Calc func",
    "schema.app.field.args": "Func args",
    "schema.app.field.incrupdate": "Incremental data",
    "schema.app.field.frontend": "Frontend only",
    "schema.app.field.disable": "Disabled",
    "schema.app.field.combine": "Data combine rule",

    "schema.app.app": "App definition",
    "schema.app.app.name": "App Name",
    "schema.app.app.display": "App display",
    "schema.app.app.desc": "App description",
    "schema.app.app.standalone": "Standalone(No target)",
    "schema.app.app.relations": "App field associations list",

    "schema.app.apptarget": "App and Target",
    "schema.app.apptarget.app": "App",
    "schema.app.apptarget.target": "Target",
    "schema.app.getapptargets": "Get Target List",
});
