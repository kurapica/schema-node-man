import{d as e,c as t,e as i,w as n,i as s,am as l}from"./index-C6Js_iX5.js";const p=e({__name:"10.app.main",setup(o){return(r,a)=>(i(),t(l,null,{default:n(()=>a[0]||(a[0]=[s("\n        ### 10.4 Main Application\n\n        Data entry and enabling the data push chain present a challenge in establishing a mutual exclusion lock for data updates. Whether using distributed or local locks, a lock key is required. Typically, this is done in the form {application name}_{target ID}.\n\n        However, if data push involves multiple applications, for example, each application aggregates data for a layer of managers, then a safe approach is to identify a sufficiently high-level manager as the target ID to establish a lock.\n\n        To clarify this step, you can specify a master application for the application (this only applies if the application's fields are reference fields). This allows the mutual exclusion lock to be locked at a higher level, avoiding issues.\n\n        ### TODO\n\n        Further discussion of the application's features awaits further discussion after the release of the basic backend SDK.\n    ")])),_:1}))}});export{p as default};
