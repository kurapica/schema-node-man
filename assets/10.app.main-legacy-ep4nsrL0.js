System.register(["./index-legacy-B7jAuSoa.js"],(function(n,e){"use strict";var t,u,r,i,c,a;return{setters:[function(n){t=n.d,u=n.c,r=n.e,i=n.w,c=n.i,a=n.am}],execute:function(){n("default",t({__name:"10.app.main",setup:function(n){return function(n,e){return r(),u(a,null,{default:i((function(){return e[0]||(e[0]=[c("\n        ### 10.4 主应用\n\n        数据录入，启用数据推送链，这里的一个困难是如何为更新数据加互斥锁，无论采用分布式锁还是本地，都需要有一个锁定用的键。通常来说，采用{应用名}_{目标ID}的形式就可以。\n\n        但是如果数据推送牵扯到多个应用，例如每个应用对于一层管理人，按照层级关系向上汇总数据，那么稳妥的做法是找到一个足够上级的管理人作为目标ID，来构建锁。\n        \n        为了明确这个步骤，可以为应用指定主应用（仅当应用的字段是引用字段时出现），这样互斥锁可以锁在比较高的层级，避免问题。\n\n        ### TODO\n\n        应用更多的部分有待基础后端SDK推出后进一步讨论。\n    ")])})),_:1})}}}))}}}));
